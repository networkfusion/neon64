Neon64 "how to assemble":

You should probably run mall.bat initially, it will rebuild
all of the .bins and then build the final ROM. After that you can run
mgs.bat to generate the two Gameshark versions. mbu.bat and mgs.bat
only assemble neon64.asm and all the files included from that.
If you modify any of the following you should run mall.bat:

codes.asm: assembly for each opcode
logo.asm: the logo (really only need to rebuild logo.bin)
staticdl.asm: the unchanging parts of the display list
status.asm: error messages and debug info, includes text routines
text.asm: text routines
defs.inc: all variable locations and many constants
gfxdefs.inc: constants for RDP
macros.inc: general purpose macros
6502defs.inc: 6502 emu register definitions
6502macs.inc: 6502 emu macros
rdp.inc: RDP command macros

The remaining files are:

mmc1.inc: MMC1 handler
mmc2.inc: MMC2 handler
mmc3.inc: MMC3 handler
atables.inc: precalculated tables for sound
backup.inc: routines for initializing from backup unit
gs.inc: routines for initializing from GS
    note: depending on which version you are assembling
          backup.inc or gs.inc will be copied to hardware.inc, which
          is what is included into the main program.
nespages.inc: NES memory map
inits.inc: Initialization, interrupt handlers
control.inc: all controller & controller pack interfacing
gcompile.inc: bg pattern table compiler
menu.inc: in-game menu
pal.inc: NES palette
pattab.inc: lookup tables for fast graphics compilation
read.inc: hardware register read handler
write.inc: hardware register and mapper write handler
rom.inc: rom loading
save.inc: SRAM management
trace.inc: tracer (not included by default)
a6502.asm: main file for 6502 emulator
cap.asm: N64 side of screen capture
depackgs.asm: load stub for GS & USA Super Mario 64
depackge.asm: ditto for european version
neon64.asm: main loop
ppu.asm: PPU emulator (runs on RSP)
rnc.asm: RNC PRO-PACK decompressor
sound.asm: sound emulation

There is no built in handling of dependencies, so you'll have to figure
this out for yourself. If you have a fast enough computer you can just
run mall.bat every time.

.h files are automatically generated by the assembler and contain a listing
of addresses so you can include a preassembled chunk (like codes.bin) in
the main program. This should all be handled automatically.

The included assembler should run in pure MS-DOS.

---

I welcome any questions or comments, if this doesn't work then I'm a fool
and you should tell me so. Check mon website at:
http://here.is/halleyscomet
or email me at:
halleyscometsoftware@hotmail.com
or bother me on AIM with my SN:
maskedtomato

And I'm still looking for someone to help with the GS<->PC communication
protocol so I can write a better transfer client than GSCC!

-Adam Gashlin, 10:48 PM, 6/1/04